name: ðŸš€ Multi-Version Release

on:
  push:
    tags:
      - 'v*'           # Nur bei Version-Tags (v1.2.3)
  workflow_dispatch:   # Manueller Trigger
    inputs:
      version:
        description: 'Version (z.B. 1.2.3)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        minecraft_version: ["1.21.6", "1.21.7", "1.21.8"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            # Remove 'v' prefix from tag
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi
      
      - name: Update gradle.properties for MC ${{ matrix.minecraft_version }}
        run: |
          # Update alle relevanten Properties fÃ¼r die MC Version
          sed -i "s/minecraft_version=.*/minecraft_version=${{ matrix.minecraft_version }}/" gradle.properties
          sed -i "s/mod_version=.*/mod_version=${{ steps.version.outputs.version }}/" gradle.properties
          sed -i "s/archives_base_name=.*/archives_base_name=AyquzasGriefUtilityAddon-${{ matrix.minecraft_version }}/" gradle.properties
          
          # Update yarn_mappings fÃ¼r entsprechende MC Version (falls nÃ¶tig)
          case "${{ matrix.minecraft_version }}" in
            "1.21.6")
              yarn_version="1.21.6+build.1"
              ;;
            "1.21.7")
              yarn_version="1.21.7+build.1"
              ;;
            "1.21.8")
              yarn_version="1.21.8+build.1"
              ;;
          esac
          
          sed -i "s/yarn_mappings=.*/yarn_mappings=$yarn_version/" gradle.properties
          
          # Zeige finale Konfiguration
          echo "=== Finale gradle.properties fÃ¼r MC ${{ matrix.minecraft_version }} ==="
          cat gradle.properties
      
      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build
      
      - name: Rename built JAR
        run: |
          # Finde die gebaute JAR-Datei (sollte jetzt den richtigen Namen haben)
          JAR_FILE=$(find build/libs -name "AyquzasGriefUtilityAddon-${{ matrix.minecraft_version }}-*.jar" -not -name "*-sources.jar" -not -name "*-dev.jar" | head -1)
          if [ -n "$JAR_FILE" ]; then
            # Behalte den Originalnamen oder erstelle aussagekrÃ¤ftigen Namen
            NEW_NAME="AyquzasGriefUtilityAddon-v${{ steps.version.outputs.version }}-mc${{ matrix.minecraft_version }}.jar"
            cp "$JAR_FILE" "$NEW_NAME"
            echo "JAR_NAME=$NEW_NAME" >> $GITHUB_ENV
            echo "Erstellt: $NEW_NAME (von $JAR_FILE)"
          else
            echo "Keine JAR-Datei gefunden! VerfÃ¼gbare Dateien:"
            find build/libs -name "*.jar"
            exit 1
          fi
          # Finde die gebaute JAR-Datei
          JAR_FILE=$(find build/libs -name "*.jar" -not -name "*-sources.jar" -not -name "*-dev.jar" | head -1)
          if [ -n "$JAR_FILE" ]; then
            # Erstelle aussagekrÃ¤ftigen Dateinamen
            NEW_NAME="meteor-addon-v${{ steps.version.outputs.version }}-mc${{ matrix.minecraft_version }}.jar"
            cp "$JAR_FILE" "$NEW_NAME"
            echo "JAR_NAME=$NEW_NAME" >> $GITHUB_ENV
          else
            echo "Keine JAR-Datei gefunden!"
            exit 1
          fi
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: addon-mc${{ matrix.minecraft_version }}
          path: ${{ env.JAR_NAME }}
  
  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Get version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: "ðŸŽ¯ AyquzasGriefUtilityAddon v${{ steps.version.outputs.version }}"
          body: |
            ## ðŸš€ AyquzasGriefUtilityAddon v${{ steps.version.outputs.version }}
            
            **UnterstÃ¼tzte Minecraft Versionen:**
            - âœ… Minecraft 1.21.6 â†’ `AyquzasGriefUtilityAddon-v${{ steps.version.outputs.version }}-mc1.21.6.jar`
            - âœ… Minecraft 1.21.7 â†’ `AyquzasGriefUtilityAddon-v${{ steps.version.outputs.version }}-mc1.21.7.jar`
            - âœ… Minecraft 1.21.8 â†’ `AyquzasGriefUtilityAddon-v${{ steps.version.outputs.version }}-mc1.21.8.jar`
            
            **ðŸ“¦ Installation:**
            1. Lade die **passende** `.jar` Datei fÃ¼r deine Minecraft Version herunter
            2. Platziere sie in deinem `mods` Ordner
            3. Starte Minecraft mit **Fabric Loader** + **Meteor Client**
            
            **âš¡ Features:**
            Grief Utility Tools fÃ¼r Meteor Client
            
            **ðŸ”§ Requirements:**
            - Minecraft (entsprechende Version)
            - Fabric Loader 0.16.14+
            - Meteor Client
            
            ---
            ðŸ’¡ **Development Builds** findest du [hier](https://github.com/${{ github.repository }}/releases?q=prerelease%3Atrue)
          files: |
            **/meteor-addon-*.jar
          draft: false
          prerelease: false
